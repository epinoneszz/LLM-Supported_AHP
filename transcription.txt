¿Cuáles son las alternativas? O sea, explíquenme cuáles son las distintas arquitecturas o alternativas de desarrollo que tienen. Como microcontrolador. Sí, o sea, eso va a ser como el elemento principal a definir, que va a definir como el resto de las cosas, ¿cierto? Sí, en el microcontrolador hay varias opciones. Tenemos Arduino, por ejemplo, tenemos módulos ESC32, ESC8266, tenemos también Raspberry. Pero lo importante es que existe la posibilidad de comunicarse por Ethernet. ¿Pueden anotar los nombres de las alternativas? Ese es un punto importante, que tenga capacidad de conectarse de forma alámbrica por Ethernet. Ya. Entonces, ¿cuántas alternativas son en total? ¿Cinco? ¿Arduino? Sí, todas esas, y el tema es que hay alternativas que tienen integrado todo y otras que necesitan un auto. ESP8266. Se supone que van a ir los cambios. Sí, ESP32WF. Bueno, ESP32WF. Ya está. Siempre recuerdo que es WF. Ya, ¿ya saben esas cinco alternativas? Sí. Solo que tenemos la ventaja que en este módulo de acá, el Ethernet, el conector viene integrado. Ahí ya estaríamos ahorrando en consumo de corriente, en precio y en espacio. Y en componente. Ya, ok. O sea, Raspberry igual también va con... Claro, pero eso es lo que Raspberry, sí, estaría sobre-dimensionado para lo que vamos a hacer. Ya, ok, perfecto. Entonces, teniendo eso como alternativa, el siguiente paso sería definir cuáles son los criterios que a ustedes les interesan. Ya, uno, el primero era como que tenga Ethernet. Ya, que mencionaste que algunos tienen y si no lo tienen hay que agregárselo, pero no es como una... Ya. Entonces, enfoquémonos primero solo en los criterios. Puedes poner ahí como... ¿Eso con lectividad sería? Sí. Entonces, su primer criterio sería conectividad siendo el principal requerimiento de Ethernet. Después, ¿qué otro? Segundo, podría ser el espacio. Ah, tamaño, claro. Para poder instalarlo dentro de un submarino, o sea, de un contenedor hermético submarino. Después tendríamos, yo creo, el consumo de corriente. ¿Ya? Sí, y el consumo de corriente implica dos cosas. En el caso de necesitar baterías, necesitamos baterías. Y el consumo de corriente excesivo también implica que se pueda calentar el interior y puede hacer que se empañe o haya humedad, se evapore el agua que está dentro. Ah, independiente de que la corriente sea externa, porque va a través de un cable. Si el aparato es muy grande y procesa mucho, se va a calentar y puede ser un problema para la cápsula en sí. Anótalo entonces. ¿El costo es relevante? Sí, es relevante. O sea, la diferencia de precios es grande. ¿Y algún otro criterio que deban considerar? Comunicación con los sensores. Son protocolos de conexión del sensor al micromotor. ¿Y ahí lo considerarías como algo separado, a la conectividad o como parte de lo mismo? Separado, porque la conectividad sería el aparato hacia la superficie. Ah, ya, como conectividad, claro. Conectividad local con el sistema. Durabilidad. Claro, también, espera. Lo de recimera, ¿cómo se llama? Conectividad local con el sistema. Protocolos sensores. Durabilidad. ¿En qué sentido se relaciona? Intención, calibración. Pero en la placa, por ejemplo, cuando la compra, tenemos muchas placas que son chinas, que no tienen garantía, que no tienen... Ya, espera un segundo. ¿Alguien puede preparar otro celular y vos podes grabar, por si acaso? Venga. Tengo un celular chino sin garantía. Este va de chino. ¿Tú tienes un celular chino? ¿Pero son todos los celulares chinos? ¿Tienes un Xiaomi? ¿Pero te he encantado de esto con la selfie, ya? Sí, original. Bueno, acá está la mía chino. ¿Alguien utiliza el celular chino? ¿Chino? Más que Android. ¿Doggie? ¿Marca perro? ¿Doggie? Tiene como 5 años de celu, pero con esa carcasa... ¿Pero con esa carcasa te duraría 10 años? ¿Carcasa? ¿Qué, entonces? ¿El celu? Es de esos que son la prueba de todo, ¿cierto? Sí. ¿Cuánto tiene la batería? Dios mío. Es lo que usa más espacio. Se lo guarda como cada 4 días, más o menos. Y yo cada media hora. Esto no lo podría usar con pantalón de uso. Se te cae el pantalón. De hecho, para rodar, cuando estáis en shock, de rodar. No lo pillas demasiado. Muchísimas notas, Jorge, tampoco. Yo pensé que era de mi casa hasta que vi los botones. Y dije, eso. Son buenas, eh. Son buenas muchísimo. Y le decían todo... ¿Cómo se llama eso? ¿La otra parte? La de Banggood. Está muy bien. ¿Y el agua? ¿Cuánta resistencia tiene? Dice que un metro por media hora. ¿La verdad? No, sí. Pero no un metro. No, no, un metro por media hora. Sigo para tomar fotos. Estoy tranquilo con que no se moje. En realidad, cuando estábamos de vacaciones, mi hermana dijo, mira, mi teléfono está parado en el agua. Y a Dios, no le pasó nada. Después lo volvió a tomar y se le echó a perder el teléfono. Y ni siquiera le decidió las especificaciones del variante. Ya. Sigamos con eso. Durabilidad, protocolo de los sensores, costo... ¿Corriente? Consumo de corriente. Consumo de corriente, el espacio que va a ser dentro del submarino y la conectividad externa de transmisión de datos. ¿Algún otro criterio que deban considerar? No creo que eso esté muy bien. Una consulta sobre el costo, por ejemplo, que me decía que hay mucha variación. Sí. ¿Cuál es la relevancia del costo en este caso? Bueno, hay un factor que existe. Por ejemplo, una ESP32 vale 3 dólares. Ya. Una ESP32 con Ethernet vale 15. Y una Raspberry puede valer 150. Ah, ya. O sea, son hartos órdenes de magnitud. Sí. Pero respecto a la solución final, ¿es relevante con el costo del producto que se vaya a comercializar? ¿Cambiar el marginal comparado con otros costos entre los sensores, por ejemplo? Esto es lo más barato. Es más barato que los sensores, todo esto. Ya. Podría considerarse casi marginal. El costo. Ya, claro. Porque el otro no... O sea, otro proceso de selección... Sí, los sensores igual valen 2 dólares arriba. De hecho, el casing también vimos que costaba como 300 dólares. Ya, entonces no es tan crítico. Ya. Ok, entonces con eso sería la segunda parte, ¿no? Definición de los criterios. Ahora sería la idea conversar sobre cómo aplican estos criterios a cada una de las opciones. Ya, entonces, vamos uno por uno. Respecto, por ejemplo, a Arduino. ¿Qué pasa con la conectividad externa? Requiere un adaptador para poder conectarse vía Ethernet. Ya, ¿y eso implica un costo adicional? Implica el costo, pero más importante el espacio y el consumo de corriente, en este caso. Ya. Que son dispositivos extra que hay que armar. Ya. En cuanto al espacio... También aumentaría si es que... Ah, pero para el Arduino, ¿no? Sí. Sí, si le ponemos el adaptador lo duplicaría el volumen que utiliza. Ya. ¿Qué dominara en específico? El que pasó el profesor Mohamed era un Arduino 1 con un adaptador Ethernet. Ya, eso sería muy grande. Sí, bastante grande. Había tenido como dos pisos. Sí, dos pisos. Son dos pisos que eran muy grandes. Estaba pensando que hagámoslo... Empecemos de nuevo esto, pero en vez de ir como por producto, hagámoslo por criterio. Porque así va a ser más fácil hacer la comparación de todos los elementos. Entonces, ya. Respecto a la conectividad, ¿qué me pueden decir de las distintas alternativas? Traten de mencionarlas así cada vez que... O sea, no apuntarlas, sino decirlas. Lo que mencionamos recién, el Arduino necesita un dispositivo externo para conectarse a Ethernet, que utiliza más espacio. Después, ESP32. Existen adaptadores, pero no están disponibles en el mercado chileno. Son más... Por internet se puede encontrar y demoran un par de semanas en llegar. Por lo tanto, tenerlo como repuesto sería importante. Después Raspberry tiene directamente conexión a Ethernet integrado. ESP826, similar al ESP32. No existe mucho adaptador en el mercado chileno. No es fácil de encontrarlo por acá. Y el ESP32, con Ethernet integrado, es fácil de encontrar y... Está en el mercado chileno. Ya, perfecto. Respecto al espacio, ¿el tamaño de cada una de estas alternativas? Bueno, hecho el espacio, tenemos que la placa Arduino está sobredimensionada porque está hecha para prototipo. Está hecha para conectar fácilmente cosas, pero no está bien optimizada en cuanto a tamaño. El ESP32 sí tiene un tamaño más aceptable. Es similar a lo que hemos estado utilizando en la boya. La Raspberry es una placa grande. Y está sobredimensionada para lo que necesitamos. Después está el ESP826, similar al tamaño del ESP32, un poquito más grande. Por tamaño sí podría servir. Y finalmente el ESP32 con Ethernet integrado sería una buena opción por tener todo en un mismo espacio. Ya, y en términos de tamaño de centímetros más, ¿cuáles serían las dimensiones de referencia más o menos? Sí, una Raspberry utiliza en área cuatro veces el espacio que una ESP32. Ya, y consulta, ¿la ESP32 tiene que instalarse después igual en una PCB? ¿O en cualquiera de los casos van a tener que usar una PCB adicional? De estas placas, el ESP32, ESP826 y el ESP32 pueden soldarse directamente en la placa de circuito impreso. No así el Arduino UNO y la Raspberry, que son placas aparte, que requieren una conexión por cable. Igual los tamaños son considerablemente distintos. Porque la ESP32, ¿cuánto tendrá como su...? Es una pulgada por dos pulgadas. De hecho, es más pequeño que una pulgada por dos pulgadas. Y el Arduino es como cuatro por cuatro pulgadas, casi, el Arduino UNO. Y con el adaptador de Ethernet, que es más grande. Sí, nada más que empieza ganándose en altura. Sí. ¿Y la de la ESP, la que está cocinando, por qué...? Sí, la conecta. ¿Por el tamaño? Sí, la conecta. Esa sería la idea. Esa sería la idea. Ya, claro. ¿Hay como dos pulgadas? Ajá. No, porque sobre el conector de Ethernet... Ya, perfecto. Entonces, ahora pasando al siguiente criterio, respecto al consumo de energía. Ya, tenemos las placas ESP22 Arduino, ESP8266 y ESP32 Ethernet, consumen lo mismo. Funcionan muy fuera del precio. De hecho, comparten integrados anteriores como las ESP40, el controlador es el mismo. La diferencia es que todas las placas mencionadas, excepto el ESP32 con Ethernet, requieren un módulo adicional, y eso implicaría más consumo de corriente para la conexión vía Ethernet. Y también está la Raspberry, que consume de 2 Amperes para arriba, lo cual es demasiado para nuestro proyecto. Ya. Entonces, todo se pone a jugar con batería, ¿no? La Raspberry no es muy buena idea. No, porque va a durar poco. O sea, pero en la aplicación final, ninguna debería llevar batería. Ninguna, claro. Porque todos van a tener energía externa. Pero el consumo de corriente acá puede generar... Claro, genera por calor. Respecto a eso, al consumo de energía, ¿tienes que, por ejemplo, agregar algún elemento adicional, como ventiladores, disipadores? En la placa de circuito impreso, posiblemente se va a agregar una fuente de poder integrado. Solo va a tener disponible para los sensores. Es una buena práctica no alimentarse directamente desde el virocontrolador. Ya. ¿Pero eso aplica para todos los casos de manera igual? Sí, aplica para todos los casos. Ya. Ok. Entonces, pasamos al siguiente criterio. ¿Costo de las distintas alternativas? ¿Se acuerdan los costos que llevamos? Bueno, entre los costos tenemos, por ejemplo, ESP32. Todas las placas basadas en ESP32 se pueden encontrar por internet desde 5 dólares. Mientras que una Raspberry se puede encontrar desde 100 dólares hacia arriba. Esa es la diferencia que hay. Tenemos entre medio el Arduino, que dependiendo si es original o alternativo puede contar 2 dólares o 25. Ya. Algo que no se preguntó al principio, pero ¿el Arduino es un modelo específico? Sí, Arduino hay varios modelos disponibles. Son muy similares entre los que, como el Arduino Uno o Arduino Nano. Si no es parecido, solo cambia el tamaño y la distribución de los pins. ¿Y la Raspberry? La Raspberry en general son muy similares desde la cuadrícula de adelante. Son todas grandes, son más grandes que el Arduino. Y el consumo de corriente también es considerable. Ok. El siguiente criterio era el protocolo de sensores. ¿Cómo afectan estas distintas alternativas a la comunicación? Cuando queremos medir el estado de los sensores, tenemos varias opciones. Entre ellas, la más antigua que sería la comunicación análoga. Después está la conexión UART y después la conexión I2C. Nuestro caso es lo equilibrado. Lo que más nos convence es el I2C porque establece una comunicación más confiable. Y permite conectar hasta 127 sensores en una línea. De estos aparatos, el Arduino es 32, es 826 y el S32 tiene directamente entrada análoga. Raspberry no lo hace porque no lo ha utilizado. Lo importante sí es que todo esto tiene un I2C, por lo que tengo entendido. Ok. También recuerdo que Natalia mencionó que ellos utilizaban MQTT como protocolo para enviar los datos. ¿Y eso cómo afecta a las distintas alternativas? ¿O es algo que se tiene que implementar? Eso no es comunicación, pero envía los datos. Pero ¿cuándo se puede correr ese protocolo en cualquiera de las alternativas? Pero eso es más para el lado de conectividad. Sí, puede ser conectividad. ¿Por lo general es un protocolo? No, es el protocolo de conectividad. ¿Con los sensores? Y tenemos la experiencia de que cuando uno mezcla dos protocolos en general no funciona bien. Por ejemplo, usar una placa análoga y a la vez I2C, para generar que el I2C estantere el análogo dependiendo de la calidad de la placa. Eso genera dos condiciones de error. Ya me entiendo. Respecto al tema de los sensores, ¿todas las placas son capaces de manejar la cantidad de sensores que ustedes necesitan? Sí y no. Los sensores necesitan dos cosas. Necesitan establecer la comunicación con la placa y necesitan una fuente de alimentación. Si consideramos que se alimentan de forma externa al microcontrolador, si se van a alimentar, por ejemplo, por I2C hasta 127 y son los que se pueden conectar a una placa. En cuanto a comunicación, todo esto tiene I2C y todo esto se puede conectar a 127 sensores sin problema. En teoría. Ya, perfecto. ¿Y el último criterio? Durabilidad del sistema. Yo la verdad es que no tengo idea. Ya, bueno, aquí tenemos el tema, por ejemplo, del Arduino. Tenemos versiones que son originales hechas en Italia y versiones chinas que son chinas. En la práctica, para practicar, con circuitos simples, los dos les funcionan igual de bien. Pero cuando es para casos más extremos como profundidad y eso, tal vez pueda ser necesario considerar que tenga alguna certificación o que compre algún estándar de calidad. Ya. ¿Esto respecto a...? ¿En qué sentido? ¿Como de calidad de funcionamiento continuo, por ejemplo? Claro, que diga que esto puede funcionar. En la especificación a veces dice... A veces, digo, porque nuestra placa es 100, no. Muchas veces está reapareciendo. Dice que este dispositivo puede funcionar, no sé, 100 horas continuas, con probabilidad de error de 0.001. Así se mide. Tanto tiempo, hay tanto error. ¿Con respecto a los golpes? ¿Cómo crees que haga funcionar? ¿Depende igual de la función? Sí, bueno, los golpes te afectan la medición análoga, porque te cambia como la capacitación de los cables. Y eso se lee muy rápidamente por la entrada análoga y la información se cambia. Por I2C no debería existir ese problema. Ah, ya. No debería existir. Hay una relación entre esos dos. Sí, eso es la gracia del I2C, hacer comunicación digital. No está el problema de que se altere por muchas condiciones externas. Ya. Perfecto. Yo creo que estamos... ¿Algún otro comentario? Lo de los Arduino, lo de SP32. Igual he visto que hay algunas placas que son como de buena calidad. Sí, es que hay muchos fabricantes. Como son placas open source, sí. En Internet se las puede fabricar y hay un millón de vendedores que te ofrecen la misma placa, pero tienen sus variaciones. Ya, en ese sentido, una SP32 de mejor calidad seguiría siendo más barata que una Raspberry Pi, digamos, por el precio que tiene. Sí, de hecho, si consideramos el que estamos utilizando como Heptec, se basa en un ESP32 que tiene además un módulo por Lora. Es como una versión premium, por así decirlo. El ESP32 es lo que está bien documentado, está estandarizado y uno sabe que si compra esta placa y compra esta misma placa, van a ser las mismas. Esa es la gracia de ser tan marca de estos productos. Ya. Porque hay muchas variaciones de cada uno. Ya. Perfecto, yo creo que ya estamos listos.